Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250418_202248'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.31 GB / 15.93 GB (27.1%)
Disk Space Avail:   717.28 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: fast_training

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'IsWeekend',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        []
		continuous (float): ['Temperature', 'IsWeekend', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-18 21:22:48
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.1828       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.70    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.73 s
Best model: ARIMA
Best model score: -2.1828
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250418_202709'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.81 GB / 15.93 GB (23.9%)
Disk Space Avail:   717.28 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: fast_training

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'IsWeekend',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        []
		continuous (float): ['Temperature', 'IsWeekend', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-18 21:27:09
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.1828       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.12    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.14 s
Best model: ARIMA
Best model score: -2.1828
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250418_202921'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.91 GB / 15.93 GB (24.5%)
Disk Space Avail:   717.28 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: fast_training

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'IsWeekend',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        []
		continuous (float): ['Temperature', 'IsWeekend', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-18 21:29:21
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.1828       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.10    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.13 s
Best model: ARIMA
Best model score: -2.1828
Model not specified in predict, will default to the model with the best validation score: ARIMA
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250418_203927'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.04 GB / 15.93 GB (25.4%)
Disk Space Avail:   717.28 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: fast_training

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'IsWeekend',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        []
		continuous (float): ['Temperature', 'IsWeekend', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-18 21:39:27
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.1828       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.48    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.51 s
Best model: ARIMA
Best model score: -2.1828
Model not specified in predict, will default to the model with the best validation score: ARIMA
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250418_204102'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.46 GB / 15.93 GB (21.7%)
Disk Space Avail:   717.28 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: fast_training

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'IsWeekend',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        []
		continuous (float): ['Temperature', 'IsWeekend', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-18 21:41:02
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.1828       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.19    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.22 s
Best model: ARIMA
Best model score: -2.1828
Model not specified in predict, will default to the model with the best validation score: ARIMA
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250418_204330'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.24 GB / 15.93 GB (20.3%)
Disk Space Avail:   717.28 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: fast_training

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'IsWeekend',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        []
		continuous (float): ['Temperature', 'IsWeekend', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-18 21:43:30
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.1828       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.23    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.28 s
Best model: ARIMA
Best model score: -2.1828
Model not specified in predict, will default to the model with the best validation score: ARIMA
