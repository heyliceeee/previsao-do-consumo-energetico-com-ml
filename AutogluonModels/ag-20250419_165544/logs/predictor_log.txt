Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_165544'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.88 GB / 15.93 GB (24.4%)
Disk Space Avail:   717.21 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'PatchTST': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7800 rows, 1 time series. Median time series length is 7800 (min=7800, max=7800). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]
	past_covariates:
		categorical:        ['Season']
		continuous (float): []

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 17:55:44
Models that will be trained: ['PatchTST']
Training timeseries model PatchTST. Training for up to 300.0s of the 300.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 299.94s -> 269.94s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	-0.0517       = Validation score (-MASE)
	74.92   s     = Training runtime
	0.03    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['PatchTST']
Total runtime: 74.97 s
Best model: PatchTST
Best model score: -0.0517
Model not specified in predict, will default to the model with the best validation score: PatchTST
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_165659"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_165659'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.90 GB / 15.93 GB (24.5%)
Disk Space Avail:   717.21 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'PatchTST': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7800 rows, 1 time series. Median time series length is 7800 (min=7800, max=7800). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', 'lag1', ...]
	past_covariates:
		categorical:        []
		continuous (float): ['IsHoliday']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 17:56:59
Models that will be trained: ['PatchTST']
Training timeseries model PatchTST. Training for up to 300.0s of the 300.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 299.93s -> 269.94s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	-0.0440       = Validation score (-MASE)
	99.36   s     = Training runtime
	0.03    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['PatchTST']
Total runtime: 99.41 s
Best model: PatchTST
Best model score: -0.0440
Model not specified in predict, will default to the model with the best validation score: PatchTST
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_165839"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_165839'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.50 GB / 15.93 GB (28.3%)
Disk Space Avail:   717.21 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'PatchTST': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7800 rows, 1 time series. Median time series length is 7800 (min=7800, max=7800). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Noite', 'tod_Tarde', 'lag1', ...]
	past_covariates:
		categorical:        []
		continuous (float): ['tod_Manhã']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 17:58:39
Models that will be trained: ['PatchTST']
Training timeseries model PatchTST. Training for up to 300.0s of the 300.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 299.94s -> 269.95s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	-0.0519       = Validation score (-MASE)
	99.39   s     = Training runtime
	0.03    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['PatchTST']
Total runtime: 99.44 s
Best model: PatchTST
Best model score: -0.0519
Model not specified in predict, will default to the model with the best validation score: PatchTST
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_170018"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_170018'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.63 GB / 15.93 GB (29.1%)
Disk Space Avail:   717.21 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'PatchTST': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7800 rows, 1 time series. Median time series length is 7800 (min=7800, max=7800). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Tarde', 'lag1', ...]
	past_covariates:
		categorical:        []
		continuous (float): ['tod_Noite']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:00:18
Models that will be trained: ['PatchTST']
Training timeseries model PatchTST. Training for up to 300.0s of the 300.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 299.94s -> 269.95s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	-0.0580       = Validation score (-MASE)
	92.59   s     = Training runtime
	0.03    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['PatchTST']
Total runtime: 92.65 s
Best model: PatchTST
Best model score: -0.0580
Model not specified in predict, will default to the model with the best validation score: PatchTST
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_170151"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_170151'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.64 GB / 15.93 GB (29.2%)
Disk Space Avail:   717.20 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'PatchTST': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7800 rows, 1 time series. Median time series length is 7800 (min=7800, max=7800). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'lag1', ...]
	past_covariates:
		categorical:        []
		continuous (float): ['tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:01:51
Models that will be trained: ['PatchTST']
Training timeseries model PatchTST. Training for up to 300.0s of the 300.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 299.94s -> 269.95s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	-0.0579       = Validation score (-MASE)
	76.60   s     = Training runtime
	0.03    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['PatchTST']
Total runtime: 76.66 s
Best model: PatchTST
Best model score: -0.0579
Model not specified in predict, will default to the model with the best validation score: PatchTST
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_170308"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_170308'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.65 GB / 15.93 GB (29.2%)
Disk Space Avail:   717.20 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'PatchTST': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7800 rows, 1 time series. Median time series length is 7800 (min=7800, max=7800). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]
	past_covariates:
		categorical:        []
		continuous (float): ['lag1']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:03:08
Models that will be trained: ['PatchTST']
Training timeseries model PatchTST. Training for up to 300.0s of the 300.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 299.94s -> 269.95s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	-0.1160       = Validation score (-MASE)
	83.84   s     = Training runtime
	0.03    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['PatchTST']
Total runtime: 83.89 s
Best model: PatchTST
Best model score: -0.1160
Model not specified in predict, will default to the model with the best validation score: PatchTST
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_170432"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_170432'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       5.31 GB / 15.93 GB (33.3%)
Disk Space Avail:   717.20 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'PatchTST': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7800 rows, 1 time series. Median time series length is 7800 (min=7800, max=7800). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]
	past_covariates:
		categorical:        []
		continuous (float): ['lag24']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:04:32
Models that will be trained: ['PatchTST']
Training timeseries model PatchTST. Training for up to 300.0s of the 300.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 299.94s -> 269.95s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	-0.0606       = Validation score (-MASE)
	67.39   s     = Training runtime
	0.03    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['PatchTST']
Total runtime: 67.44 s
Best model: PatchTST
Best model score: -0.0606
Model not specified in predict, will default to the model with the best validation score: PatchTST
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_170540"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_170540'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       5.30 GB / 15.93 GB (33.3%)
Disk Space Avail:   717.20 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'PatchTST': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7800 rows, 1 time series. Median time series length is 7800 (min=7800, max=7800). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]
	past_covariates:
		categorical:        []
		continuous (float): ['lag168']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:05:40
Models that will be trained: ['PatchTST']
Training timeseries model PatchTST. Training for up to 300.0s of the 300.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 299.95s -> 269.95s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	Warning: Exception caused PatchTST to fail during training... Skipping this model.
	name 'exit' is not defined
Not fitting ensemble as no models were successfully trained.
Training complete. Models trained: []
Total runtime: 49.48 s
Trainer has no fit models that can predict.
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_171142"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_171142'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.88 GB / 15.93 GB (24.3%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7800 rows, 1 time series. Median time series length is 7800 (min=7800, max=7800). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:11:42
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.4245       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.53    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.58 s
Best model: ARIMA
Best model score: -2.4245
Model not specified in predict, will default to the model with the best validation score: ARIMA
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_171211"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_171211'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.63 GB / 15.93 GB (22.8%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7800 rows, 1 time series. Median time series length is 7800 (min=7800, max=7800). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:12:11
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.4245       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.16    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.20 s
Best model: ARIMA
Best model score: -2.4245
Model not specified in predict, will default to the model with the best validation score: ARIMA
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_172416"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_172416'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.84 GB / 15.93 GB (24.1%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:24:16
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.57    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.60 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_172534"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_172534'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.46 GB / 15.93 GB (21.7%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:25:34
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.13    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.17 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_172731"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_172731'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.27 GB / 15.93 GB (20.5%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:27:31
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 299.9s of the 299.9s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.17    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.20 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_172910"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_172910'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.08 GB / 15.93 GB (19.3%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:29:10
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.24    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.28 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_173101"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_173101'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.84 GB / 15.93 GB (24.1%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:31:01
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.07    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.10 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_173710"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_173710'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.81 GB / 15.93 GB (23.9%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:37:10
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.50    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.53 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_173728"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_173728'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.43 GB / 15.93 GB (21.6%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:37:28
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 299.9s of the 299.9s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.62    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.66 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_173805"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_173805'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.30 GB / 15.93 GB (20.7%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:38:05
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.25    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.28 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_173905"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_173905'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.18 GB / 15.93 GB (19.9%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:39:05
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.21    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.26 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_174025"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_174025'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.05 GB / 15.93 GB (19.1%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:40:25
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.10    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.13 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_174342"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_174342'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.36 GB / 15.93 GB (21.1%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:43:43
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.07    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.12 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_174921"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_174921'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.73 GB / 15.93 GB (23.4%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:49:21
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.64    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.67 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_175126"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_175126'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.38 GB / 15.93 GB (21.2%)
Disk Space Avail:   717.19 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:51:26
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.48    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.52 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_175354"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_175354'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.18 GB / 15.93 GB (20.0%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:53:54
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.32    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.35 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_175525"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_175525'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.36 GB / 15.93 GB (21.1%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 18:55:25
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.08    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.12 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_180133"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_180133'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.68 GB / 15.93 GB (23.1%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 19:01:33
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.56    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.59 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_180405"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_180405'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.39 GB / 15.93 GB (21.3%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 19:04:05
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.18    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.21 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_180650"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_180650'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.62 GB / 15.93 GB (22.8%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 19:06:50
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.09    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.12 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_181338"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_181338'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.64 GB / 15.93 GB (22.9%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 19:13:38
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.49    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.52 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_181621"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_181621'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.42 GB / 15.93 GB (21.4%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 19:16:21
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.14    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.17 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_181716"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_181716'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.28 GB / 15.93 GB (20.6%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 19:17:17
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.21    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.24 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_181845"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_181845'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.40 GB / 15.93 GB (21.3%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 19:18:46
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.07    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.10 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_192802"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_192802'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       5.07 GB / 15.93 GB (31.9%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:28:02
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.86    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.89 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_193045"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_193045'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.39 GB / 15.93 GB (27.6%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:30:45
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.15    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.18 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_193218"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_193218'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.19 GB / 15.93 GB (26.3%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:32:19
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.12    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.16 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_193424"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_193424'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.28 GB / 15.93 GB (26.9%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:34:24
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.07    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.11 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_193656"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_193656'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.99 GB / 15.93 GB (25.0%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:36:56
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.07 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_193926"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_193926'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.47 GB / 15.93 GB (21.8%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:39:26
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.09    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.13 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_194310"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_194310'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.30 GB / 15.93 GB (20.7%)
Disk Space Avail:   717.18 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:43:10
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.07 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_195129"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_195129'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.41 GB / 15.93 GB (21.4%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:51:29
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.53    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.56 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_195200"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_195200'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.04 GB / 15.93 GB (19.1%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:52:00
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.26    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.29 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_195403"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_195403'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       2.93 GB / 15.93 GB (18.4%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:54:03
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.20    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.23 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_195540"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_195540'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.04 GB / 15.93 GB (19.1%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:55:40
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 299.8s of the 299.8s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.11    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.28 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_195740"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_195740'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.51 GB / 15.93 GB (22.0%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:57:40
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_195744"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_195744'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.84 GB / 15.93 GB (24.1%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 20:57:44
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.47    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.50 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_200154"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_200154'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.67 GB / 15.93 GB (23.1%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:01:54
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.11    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.14 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_200422"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_200422'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.80 GB / 15.93 GB (23.8%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:04:22
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.10    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.15 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_200431"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_200431'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.65 GB / 15.93 GB (22.9%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:04:32
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.07 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_200654"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_200654'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.73 GB / 15.93 GB (23.4%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:06:54
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.56    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.60 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_201129"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_201129'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.84 GB / 15.93 GB (24.1%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:11:29
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.12    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.18 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_201441"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_201441'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.69 GB / 15.93 GB (23.2%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:14:41
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.07 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_201714"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_201714'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.68 GB / 15.93 GB (23.1%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:17:14
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.09    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.13 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_201825"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_201825'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.55 GB / 15.93 GB (22.3%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:18:25
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.07 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_202206"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_202206'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.53 GB / 15.93 GB (22.2%)
Disk Space Avail:   717.17 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:22:06
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.09    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.12 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_202607"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_202607'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.71 GB / 15.93 GB (23.3%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:26:07
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.09    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.13 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_202721"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_202721'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.58 GB / 15.93 GB (22.5%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:27:21
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.07 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_202807"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_202807'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.55 GB / 15.93 GB (22.3%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:28:07
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.34    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.37 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_203116"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_203116'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.51 GB / 15.93 GB (22.0%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:31:16
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.07    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.11 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_203359"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_203359'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.60 GB / 15.93 GB (22.6%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:33:59
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.08 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_203634"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_203634'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.72 GB / 15.93 GB (23.4%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:36:34
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.09    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.15 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_203951"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_203951'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.10 GB / 15.93 GB (25.7%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:39:51
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.08 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_204008"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_204008'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.02 GB / 15.93 GB (25.2%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:40:08
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.62    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.66 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_204131"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_204131'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.92 GB / 15.93 GB (24.6%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:41:31
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 299.9s of the 299.9s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.15    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.18 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_204225"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_204225'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.72 GB / 15.93 GB (23.3%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:42:25
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.04    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.07 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_204239"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_204239'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.65 GB / 15.93 GB (22.9%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:42:39
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.13    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.17 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_205554"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_205554'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.02 GB / 15.93 GB (25.3%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:55:54
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.81    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.85 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_205734"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_205734'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.17 GB / 15.93 GB (26.2%)
Disk Space Avail:   717.16 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:57:35
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.28    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.32 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_205916"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_205916'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.91 GB / 15.93 GB (24.5%)
Disk Space Avail:   717.15 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 21:59:16
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.5798       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.27    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.31 s
Best model: ARIMA
Best model score: -1.5798
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_210247"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_210247'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.22 GB / 15.93 GB (26.5%)
Disk Space Avail:   717.15 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'IsHoliday',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde',
                            'lag1',
                            'lag24',
                            'lag168'],
 'num_val_windows': 1,
 'prediction_length': 23,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 5493 rows, 1 time series. Median time series length is 5493 (min=5493, max=5493). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'IsHoliday', 'tod_Manhã', 'tod_Noite', 'tod_Tarde', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 22:02:47
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.3000       = Validation score (-MASE)
	0.01    s     = Training runtime
	0.08    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.12 s
Best model: ARIMA
Best model score: -1.3000
