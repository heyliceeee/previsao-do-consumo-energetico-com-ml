Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_132059'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.50 GB / 15.93 GB (22.0%)
Disk Space Avail:   717.27 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 14:20:59
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-1.1215       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.11    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.14 s
Best model: ARIMA
Best model score: -1.1215
Model not specified in predict, will default to the model with the best validation score: ARIMA
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_133340'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.63 GB / 15.93 GB (22.8%)
Disk Space Avail:   717.27 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}, 'DeepAR': {}, 'ETS': {}, 'Theta': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 14:33:40
Models that will be trained: ['ETS', 'Theta', 'DeepAR', 'ARIMA']
Training timeseries model ETS. Training for up to 60.0s of the 300.0s of remaining time.
	-1.9817       = Validation score (-MASE)
	0.02    s     = Training runtime
	6.41    s     = Validation (prediction) runtime
Training timeseries model Theta. Training for up to 73.4s of the 293.5s of remaining time.
	-2.1989       = Validation score (-MASE)
	0.02    s     = Training runtime
	18.54   s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 91.7s of the 275.0s of remaining time.
	-0.3658       = Validation score (-MASE)
	88.77   s     = Training runtime
	0.11    s     = Validation (prediction) runtime
Training timeseries model ARIMA. Training for up to 93.0s of the 186.1s of remaining time.
	-2.1828       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.13    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	-0.3658       = Validation score (-MASE)
	0.14    s     = Training runtime
	0.11    s     = Validation (prediction) runtime
Training complete. Models trained: ['ETS', 'Theta', 'DeepAR', 'ARIMA', 'WeightedEnsemble']
Total runtime: 116.20 s
Best model: DeepAR
Best model score: -0.3658
Model not specified in predict, will default to the model with the best validation score: DeepAR
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_133940"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_133940'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.49 GB / 15.93 GB (21.9%)
Disk Space Avail:   717.27 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}, 'DeepAR': {}, 'ETS': {}, 'Theta': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 14:39:40
Models that will be trained: ['ETS', 'Theta', 'DeepAR', 'ARIMA']
Training timeseries model ETS. Training for up to 60.0s of the 300.0s of remaining time.
	-1.0841       = Validation score (-MASE)
	0.02    s     = Training runtime
	1.17    s     = Validation (prediction) runtime
Training timeseries model Theta. Training for up to 74.7s of the 298.8s of remaining time.
	-0.5622       = Validation score (-MASE)
	0.02    s     = Training runtime
	17.76   s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 93.7s of the 281.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 93.66s -> 84.29s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	-0.4747       = Validation score (-MASE)
	84.82   s     = Training runtime
	0.15    s     = Validation (prediction) runtime
Training timeseries model ARIMA. Training for up to 98.0s of the 196.0s of remaining time.
	-1.1215       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.18    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 0.54, 'Theta': 0.46}
	-0.2980       = Validation score (-MASE)
	0.14    s     = Training runtime
	17.92   s     = Validation (prediction) runtime
Training complete. Models trained: ['ETS', 'Theta', 'DeepAR', 'ARIMA', 'WeightedEnsemble']
Total runtime: 106.34 s
Best model: WeightedEnsemble
Best model score: -0.2980
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_134659"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_134659'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.37 GB / 15.93 GB (27.4%)
Disk Space Avail:   717.27 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}, 'DeepAR': {}, 'ETS': {}, 'Theta': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 14:46:59
Models that will be trained: ['ETS', 'Theta', 'DeepAR', 'ARIMA']
Training timeseries model ETS. Training for up to 60.0s of the 300.0s of remaining time.
	-1.0841       = Validation score (-MASE)
	0.02    s     = Training runtime
	3.49    s     = Validation (prediction) runtime
Training timeseries model Theta. Training for up to 74.1s of the 296.5s of remaining time.
	-0.5622       = Validation score (-MASE)
	0.02    s     = Training runtime
	17.39   s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 93.0s of the 279.0s of remaining time.
	Time limit adjusted due to model hyperparameters: 93.00s -> 83.70s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	-0.4601       = Validation score (-MASE)
	83.92   s     = Training runtime
	0.12    s     = Validation (prediction) runtime
Training timeseries model ARIMA. Training for up to 97.5s of the 195.0s of remaining time.
	-1.1215       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.15    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 0.54, 'Theta': 0.46}
	-0.3077       = Validation score (-MASE)
	0.13    s     = Training runtime
	17.51   s     = Validation (prediction) runtime
Training complete. Models trained: ['ETS', 'Theta', 'DeepAR', 'ARIMA', 'WeightedEnsemble']
Total runtime: 107.30 s
Best model: WeightedEnsemble
Best model score: -0.3077
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_135105"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_135105'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.64 GB / 15.93 GB (22.9%)
Disk Space Avail:   717.27 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}, 'DeepAR': {}, 'ETS': {}, 'Theta': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 14:51:05
Models that will be trained: ['ETS', 'Theta', 'DeepAR', 'ARIMA']
Training timeseries model ETS. Training for up to 60.0s of the 300.0s of remaining time.
	-1.9817       = Validation score (-MASE)
	0.02    s     = Training runtime
	5.66    s     = Validation (prediction) runtime
Training timeseries model Theta. Training for up to 73.6s of the 294.3s of remaining time.
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_135136"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_135136'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.23 GB / 15.93 GB (26.6%)
Disk Space Avail:   717.27 GB / 931.46 GB (77.0%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}, 'DeepAR': {}, 'ETS': {}, 'Theta': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 14:51:36
Models that will be trained: ['ETS', 'Theta', 'DeepAR', 'ARIMA']
Training timeseries model ETS. Training for up to 60.0s of the 300.0s of remaining time.
	-1.9817       = Validation score (-MASE)
	0.02    s     = Training runtime
	6.07    s     = Validation (prediction) runtime
Training timeseries model Theta. Training for up to 73.5s of the 293.9s of remaining time.
	-2.1989       = Validation score (-MASE)
	0.02    s     = Training runtime
	17.65   s     = Validation (prediction) runtime
Training timeseries model DeepAR. Training for up to 92.1s of the 276.2s of remaining time.
	Time limit adjusted due to model hyperparameters: 92.06s -> 82.85s (ag.max_time_limit=None, ag.max_time_limit_ratio=0.9, ag.min_time_limit=0)
	-0.3522       = Validation score (-MASE)
	83.08   s     = Training runtime
	0.11    s     = Validation (prediction) runtime
Training timeseries model ARIMA. Training for up to 96.5s of the 193.0s of remaining time.
	-2.1828       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.11    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'DeepAR': 1.0}
	-0.3522       = Validation score (-MASE)
	0.13    s     = Training runtime
	0.11    s     = Validation (prediction) runtime
Training complete. Models trained: ['ETS', 'Theta', 'DeepAR', 'ARIMA', 'WeightedEnsemble']
Total runtime: 109.27 s
Best model: DeepAR
Best model score: -0.3522
Model not specified in predict, will default to the model with the best validation score: DeepAR
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_135747"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_135747'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.17 GB / 15.93 GB (26.2%)
Disk Space Avail:   717.27 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 14:57:47
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.1828       = Validation score (-MASE)
	0.02    s     = Training runtime
	0.11    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 0.14 s
Best model: ARIMA
Best model score: -2.1828
Model not specified in predict, will default to the model with the best validation score: ARIMA
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_140209"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_140209'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.56 GB / 15.93 GB (22.4%)
Disk Space Avail:   717.27 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature', 'Hour', 'DayOfTheWeek', 'Season'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

No path specified. Models will be saved in: "AutogluonModels\ag-20250419_140320"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_140320'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       4.01 GB / 15.93 GB (25.2%)
Disk Space Avail:   717.27 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 15:03:20
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.1828       = Validation score (-MASE)
	0.02    s     = Training runtime
	2.52    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.55 s
Best model: ARIMA
Best model score: -2.1828
Model not specified in predict, will default to the model with the best validation score: ARIMA
No path specified. Models will be saved in: "AutogluonModels\ag-20250419_140402"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_140402'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.65 GB / 15.93 GB (22.9%)
Disk Space Avail:   717.27 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature', 'Hour', 'DayOfTheWeek', 'Season'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

No path specified. Models will be saved in: "AutogluonModels\ag-20250419_140543"
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250419_140543'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       3.99 GB / 15.93 GB (25.0%)
Disk Space Avail:   717.26 GB / 931.46 GB (77.0%)
===================================================

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'ARIMA': {}},
 'known_covariates_names': ['Temperature',
                            'Hour',
                            'DayOfTheWeek',
                            'Season',
                            'tod_Manhã',
                            'tod_Noite',
                            'tod_Tarde'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 7968 rows, 1 time series. Median time series length is 7968 (min=7968, max=7968). 

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Temperature', 'Hour', 'tod_Manhã', 'tod_Noite', 'tod_Tarde']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-19 15:05:43
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-2.4018       = Validation score (-MASE)
	0.01    s     = Training runtime
	2.14    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 2.21 s
Best model: ARIMA
Best model score: -2.4018
Model not specified in predict, will default to the model with the best validation score: ARIMA
