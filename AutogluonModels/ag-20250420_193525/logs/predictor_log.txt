Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250420_193525'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       2.07 GB / 15.93 GB (13.0%)
Disk Space Avail:   702.90 GB / 931.46 GB (75.5%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'h',
 'hyperparameters': {'ARIMAModel': {'covariate_regressor': 'CAT',
                                    'target_scaler': 'standard'}},
 'known_covariates_names': ['Hour',
                            'DayOfTheWeek',
                            'Month',
                            'Season',
                            'IsWeekend',
                            'IsHoliday',
                            'Temperature'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Provided train_data has 7992 rows, 1 time series. Median time series length is 7992 (min=7992, max=7992). 
Provided tuning_data has 8016 rows, 1 time series. Median time series length is 8016 (min=8016, max=8016). 
	Setting num_val_windows = 0 (disabling backtesting on train_data) because tuning_data is provided.

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Hour', 'Month', 'IsWeekend', 'IsHoliday', 'Temperature']
	past_covariates:
		categorical:        ['TimeOfDay']
		continuous (float): ['ActiveEnergy(kWh)', 'Day', 'Year', 'PopulationDensity', 'EnergyStandardized']
	static_features:
		categorical:        []
		continuous (float): ['PopulationDensity']

AutoGluon will ignore following non-numeric/non-informative columns:
	ignored covariates:      ['Date']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-20 20:35:26
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-0.0808       = Validation score (-WQL)
	21.79   s     = Training runtime
	3.10    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 25.00 s
Best model: ARIMA
Best model score: -0.0808
Model not specified in predict, will default to the model with the best validation score: ARIMA
Model not specified in predict, will default to the model with the best validation score: ARIMA
Model not specified in predict, will default to the model with the best validation score: ARIMA
Model not specified in predict, will default to the model with the best validation score: ARIMA
Model not specified in predict, will default to the model with the best validation score: ARIMA
Model not specified in predict, will default to the model with the best validation score: ARIMA
Model not specified in predict, will default to the model with the best validation score: ARIMA
Model not specified in predict, will default to the model with the best validation score: ARIMA
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250420_210505'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       1.73 GB / 15.93 GB (10.9%)
Disk Space Avail:   702.81 GB / 931.46 GB (75.5%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'h',
 'hyperparameters': {'ARIMAModel': {'covariate_regressor': 'CAT',
                                    'target_scaler': 'standard'}},
 'known_covariates_names': ['Hour',
                            'DayOfTheWeek',
                            'Month',
                            'Season',
                            'IsWeekend',
                            'IsHoliday',
                            'Temperature'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Provided train_data has 7992 rows, 1 time series. Median time series length is 7992 (min=7992, max=7992). 
Provided tuning_data has 8016 rows, 1 time series. Median time series length is 8016 (min=8016, max=8016). 
	Setting num_val_windows = 0 (disabling backtesting on train_data) because tuning_data is provided.

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Hour', 'Month', 'IsWeekend', 'IsHoliday', 'Temperature']
	past_covariates:
		categorical:        ['TimeOfDay']
		continuous (float): ['ActiveEnergy(kWh)', 'Day', 'Year', 'PopulationDensity', 'EnergyStandardized']
	static_features:
		categorical:        []
		continuous (float): ['PopulationDensity']

AutoGluon will ignore following non-numeric/non-informative columns:
	ignored covariates:      ['Date']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-20 22:05:06
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 299.6s of the 299.6s of remaining time.
	-0.0808       = Validation score (-WQL)
	24.79   s     = Training runtime
	24.71   s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 50.03 s
Best model: ARIMA
Best model score: -0.0808
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\AutogluonModels\ag-20250420_210730'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       1.76 GB / 15.93 GB (11.0%)
Disk Space Avail:   702.80 GB / 931.46 GB (75.5%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'h',
 'hyperparameters': {'ARIMAModel': {'covariate_regressor': 'CAT',
                                    'target_scaler': 'standard'}},
 'known_covariates_names': ['Hour',
                            'DayOfTheWeek',
                            'Month',
                            'Season',
                            'IsWeekend',
                            'IsHoliday',
                            'Temperature'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Provided train_data has 7992 rows, 1 time series. Median time series length is 7992 (min=7992, max=7992). 
Provided tuning_data has 8016 rows, 1 time series. Median time series length is 8016 (min=8016, max=8016). 
	Setting num_val_windows = 0 (disabling backtesting on train_data) because tuning_data is provided.

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Hour', 'Month', 'IsWeekend', 'IsHoliday', 'Temperature']
	past_covariates:
		categorical:        ['TimeOfDay']
		continuous (float): ['ActiveEnergy(kWh)', 'Day', 'Year', 'PopulationDensity', 'EnergyStandardized']
	static_features:
		categorical:        []
		continuous (float): ['PopulationDensity']

AutoGluon will ignore following non-numeric/non-informative columns:
	ignored covariates:      ['Date']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-20 22:07:30
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-0.0808       = Validation score (-WQL)
	21.54   s     = Training runtime
	2.43    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 24.00 s
Best model: ARIMA
Best model score: -0.0808
Beginning AutoGluon training... Time limit = 300s
AutoGluon will save models to 'D:\githubProjects\previsao-do-consumo-energetico-com-ml\predicts\XARIMA\modelo'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.11.9
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26100
CPU Count:          12
GPU Count:          0
Memory Avail:       1.73 GB / 15.93 GB (10.9%)
Disk Space Avail:   702.80 GB / 931.46 GB (75.5%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'h',
 'hyperparameters': {'ARIMAModel': {'covariate_regressor': 'CAT',
                                    'target_scaler': 'standard'}},
 'known_covariates_names': ['Hour',
                            'DayOfTheWeek',
                            'Month',
                            'Season',
                            'IsWeekend',
                            'IsHoliday',
                            'Temperature'],
 'num_val_windows': 1,
 'prediction_length': 24,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'EnergyNormalized',
 'time_limit': 300,
 'verbosity': 2}

Provided train_data has 7992 rows, 1 time series. Median time series length is 7992 (min=7992, max=7992). 
Provided tuning_data has 8016 rows, 1 time series. Median time series length is 8016 (min=8016, max=8016). 
	Setting num_val_windows = 0 (disabling backtesting on train_data) because tuning_data is provided.

Provided data contains following columns:
	target: 'EnergyNormalized'
	known_covariates:
		categorical:        ['DayOfTheWeek', 'Season']
		continuous (float): ['Hour', 'Month', 'IsWeekend', 'IsHoliday', 'Temperature']
	past_covariates:
		categorical:        ['TimeOfDay']
		continuous (float): ['ActiveEnergy(kWh)', 'Day', 'Year', 'PopulationDensity', 'EnergyStandardized']
	static_features:
		categorical:        []
		continuous (float): ['PopulationDensity']

AutoGluon will ignore following non-numeric/non-informative columns:
	ignored covariates:      ['Date']

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-04-20 22:09:27
Models that will be trained: ['ARIMA']
Training timeseries model ARIMA. Training for up to 300.0s of the 300.0s of remaining time.
	-0.0808       = Validation score (-WQL)
	24.13   s     = Training runtime
	2.72    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ARIMA']
Total runtime: 26.87 s
Best model: ARIMA
Best model score: -0.0808
Model not specified in predict, will default to the model with the best validation score: ARIMA
Model not specified in predict, will default to the model with the best validation score: ARIMA
Loading predictor from path D:\githubProjects\previsao-do-consumo-energetico-com-ml\predicts\XARIMA\modelo
Model not specified in predict, will default to the model with the best validation score: ARIMA
Model not specified in predict, will default to the model with the best validation score: ARIMA
